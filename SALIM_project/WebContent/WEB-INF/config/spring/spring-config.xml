<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- annotation을 이용한 bean생성 설정시 사용 -->
	<context:component-scan base-package="com.salim.controller, com.salim.dao.impl, com.salim.service.impl, com.salim.interceptor"/>

	<mvc:annotation-driven/>
	<!-- ===========================================
		체크 필요하신 분은 이곳에 등록해서 사용하세요. 
		-> interceptors이용하시는 분들 의미!
	===============================================-->
	<!-- 활동 전에 로그인 했는지 여부 체크하는 interceptor -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/login/**"/>
			<bean class="com.salim.interceptor.LoginCheckInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 단순 링크 이동 -->
	<mvc:view-controller path="/main.do" view-name="main.tiles"/>
	<mvc:view-controller path="/next.do" view-name="body/next.tiles"/>
	<mvc:view-controller path="/calendar.do" view-name="body/calendar.tiles"/>
	<mvc:view-controller path="/graph.do" view-name="body/graph.tiles"/>
	
	<mvc:view-controller path="/body/income.do" view-name="body/income.tiles"/>


	<!-- ViewResolver등록 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="1"/>
	<bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" p:order="2"/>	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="3" p:prefix="/WEB-INF/view"/>
	
	<!-- Tiles 설정 -> 나중에 Bootstrap이용하게 되면 없어질지도... -->
	<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/config/tiles/tiles-defs.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- mybatis 연동 설정 -->
	<!-- BasicDataSource -->
	<bean name="dataSource" class="org.apache.tomcat.dbcp.dbcp2.BasicDataSource" 
			p:driverClassName="oracle.jdbc.driver.OracleDriver"
	 			p:url="jdbc:oracle:thin:@127.0.0.1:1521:XE"
	 			p:username="salim" p:password="salim"
	 			p:maxTotal="100" p:initialSize="2"/>
	 			
	 <!-- SqlSessionFactoryBean : SqlSessionFactoryBuilder의 역할. SqlSessionFactory를 생성.-->
	 <bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
	 		   p:configLocation="/WEB-INF/config/mybatis/mybatis-config.xml"
	 		   p:dataSource-ref="dataSource" />
	 
	 <!-- SqlSessionTemplate 생성 - 생성자로 sqlSessionFactoryBean을 주입 -->
	<bean name="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
		      c:sqlSessionFactory-ref="sqlSessionFactory"/>
	
	
		      
	<!-- Transaction 처리 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
			  p:dataSource-ref="dataSource"/>
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
