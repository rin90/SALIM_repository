<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace = "expenseMapper">
	
	<!-- 
		지출 insert
		지출 select - 해당 날짜에 저장되있는 것 모두 조회 - 순서는 입력순 - seq로 정렬 -> 페이징처리
		지출 update - 회원id에 해당하는 아이, 작성번호
		지출 delete - 선택된 것의 no를 조회해서 그것을 삭제
	 -->
	
	<!-- 지출 insert -->
	<insert id="insertExpense" parameterType="expense">
		<selectKey keyProperty="expenseId" resultType="_int" order="BEFORE">
			select seq_exp.nextval from dual
		</selectKey>
		insert into expense
		values(#{expenseId}, #{memberId}, #{codeId}, #{expenseDate}, #{expenseExplain}, #{cashExpense}, #{cardExpense}, #{cardType})
	</insert>
	
	<!-- 지출 update -->
	<update id="updateExpense" parameterType="expense">
		update expense
		<set>
			code_id=#{codeId},
			expense_date=#{expenseDate},
			expense_explain=#{expenseExplain},
			cash_expense=#{cashExpense},
			card_expense=#{cardExpense},
			card_type=#{cardType}
		</set>
		where expense_id=#{expenseId}
	</update>
	
	<!-- 지출 delete -->
	<delete id="deleteExpense" parameterType="_int">
		delete from expense
		where expense_id=#{expenseId}
	</delete>
	
	<!-- 지출 select -->
	<resultMap type="expense" id="expense-resultMap">
		<id column="expense_id" property="expenseId"/>
		<result column="member_id" property="memberId"/>
		<result column="code_id" property="codeId"/>
		<result column="expense_date" property="expenseDate"/>
		<result column="expense_explain" property="expenseExplain"/>
		<result column="cash_expense" property="cashExpense"/>
		<result column="card_expense" property="cardExpense"/>
		<result column="card_type" property="cardType"/>
	</resultMap>
	
	<!-- 지출 select -->
	<select id="selectExpenseDate" parameterType="map" resultMap="expense-resultMap">
		select expense_id, member_id, code_id, expense_date, expense_explain, cash_expense, card_expense, card_type
		from expense 
		where member_id=#{memberId}
		and expense_date=#{expenseDate}
		order by expense_id asc
	</select>
	
	
	
	
	
	
	
	
	
	
	<!-- 월보고서용 select -->
	<select id="selectSpendEachCategory" parameterType="map" resultType="map">
		select big_content category, sum(total) spend_money
		from (	select big.big_code, big.big_content, nvl(small.total, 0) total
				from bigcategory big, 
					(select s.small_code, s.small_content, e.total, s.big_code
					 from smallcategory s, 
						(select code_id, nvl(sum(cash_expense),0)+nvl(sum(card_expense),0) total
							from expense
							where to_char(expense_date, 'YYYY-MM')=#{month} and member_id=#{memberId}
							group by code_id) e
				 	 where s.small_code = e. code_id) small
				where big.big_code=small.big_code(+) and big.high_code=2) 
		group by big_content
		order by big_content
	</select>
	
	
	
	
</mapper>