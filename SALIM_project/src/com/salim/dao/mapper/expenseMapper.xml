<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace = "expenseMapper">
	
	<!-- 
		지출 insert
		지출 select - 해당 날짜에 저장되있는 것 모두 조회 - 순서는 입력순 - seq로 정렬 -> 페이징처리
		지출 update - 회원id에 해당하는 아이, 작성번호
		지출 delete - 선택된 것의 no를 조회해서 그것을 삭제
	 -->
	
	<!-- 지출 insert -->
	<insert id="insertExpense" parameterType="expense">
		<selectKey keyProperty="expenseId" resultType="_int" order="BEFORE">
			select seq_exp.nextval from dual
		</selectKey>
		insert into expense
		values(#{expenseId}, #{memberId}, #{codeId}, #{expenseDate}, #{expenseExplain}, #{cashExpense}, #{cardExpense}, #{cardType})
	</insert>
	
	<!-- 지출 update -->
	<update id="updateExpense" parameterType="expense">
		update expense
		<set>
			code_id=#{codeId},
			expense_date=#{expenseDate},
			expense_explain=#{expenseExplain},
			cash_expense=#{cashExpense},
			card_expense=#{cardExpense},
			card_type=#{cardType}
		</set>
		where expense_id=#{expenseId}
		and member_id=#{memberId}
	</update>
	
	<!-- 지출 delete -->
	<delete id="deleteExpense" parameterType="map">
		delete from expense
		where expense_id=#{expenseId}
		and member_id=#{memberId}
	</delete>
	
	<!-- 지출 select -->
	<resultMap type="expense" id="expense-resultMap">
		<id column="expense_id" property="expenseId"/>
		<result column="member_id" property="memberId"/>
		<result column="code_id" property="codeId"/>
		<result column="expense_date" property="expenseDate"/>
		<result column="expense_explain" property="expenseExplain"/>
		<result column="cash_expense" property="cashExpense"/>
		<result column="card_expense" property="cardExpense"/>
		<result column="card_type" property="cardType"/>
	</resultMap>
	
	<!-- 지출 select -->
	<select id="selectExpenseDate" parameterType="map" resultMap="expense-resultMap">
		select expense_id, member_id, code_id, expense_date, expense_explain, cash_expense, card_expense, card_type
		from expense 
		where member_id=#{memberId}
		and expense_date=#{expenseDate}
		order by expense_id asc
	</select>
	
	
	<!-- ==================================================================================== -->
	<!-- 	<<<<<	보고서용 Qery	>>>>>	-->	
	
	
	<!-- 1달동안 사용한 지출금액 (특정달, 특정ID 기준 )-->
	<select id="selectSpendDuringMonth" parameterType="map" resultType="map">
		select sum(total) total 
		from (
			select nvl(sum(cash_expense),0)+nvl(sum(card_expense),0) total 
			from expense 
			where to_char(expense_date, 'YYYY-MM')=#{month} and member_id=#{memberId} 
			group by code_id 
		)
	</select>
	
	<!-- 1달동안 사용한 대분류별 지출금액 (특정 달, 특정ID 기준) -->
	<select id="selectSpendEachCategory" parameterType="map" resultType="map">
		select big.big_content category, nvl(result.total, 0) spend_money
		from bigcategory big,
			(	select big.big_code, sum(small.total) total
				from bigcategory big, 
					(select s.small_code, e.total, s.big_code
					 from smallcategory s, 
						(	select code_id, nvl(sum(cash_expense),0)+nvl(sum(card_expense),0) total
							from expense
							where to_char(expense_date, 'YYYY-MM')=#{month} and member_id=#{memberId}
							group by code_id) e
				 	 where s.small_code = e. code_id) small
				where big.big_code=small.big_code
				group by big.big_code) result
		where big.big_code = result.big_code(+) and big.high_code = 2
		order by big.big_content
	</select>
	
	<!-- 1년동안 각각의 달에 지출한 금액의 총합 (특정 년도, 특정 ID 기준 )-->
	<select id="selectSpendEachMonth" parameterType="map" resultType="map">
		select ''''||stand.LV||'월'||'''' month, nvl(result.total, 0) spend_month_total 
		from (	select sum(cash+card) total, edate 
				from(	select code_id, nvl(cash_expense,0) cash, nvl(card_expense,0) card, to_char(expense_date, 'MM') edate 
						from expense 
						where to_char(expense_date, 'YYYY')=#{year} and member_id=#{memberId}	)
				group by edate	)	result, 
			 (	SELECT LPAD(LEVEL, 2, '0') LV FROM DUAL CONNECT BY LEVEL &lt;= 12	) stand 
		where result.edate(+) = stand.LV 
		order by stand.LV 
	</select>
	
	<!-- 1년동안의 특정 계정이 사용한 수입*지출 금액 -->
	<select id="selectTotalMonthReport" parameterType="map" resultType="map">
		select ''''||i.month||'월'||'''' month, i.income_month_total, s.spend_month_total 
		from (	select stand.LV month, nvl(result.total, 0) income_month_total 
				from (	select month, sum(income_money) total
						from (	select income_id, to_char(income_date, 'MM') month, income_money
								from income 
								where to_char(income_date, 'YYYY')=#{year} and member_id=#{memberId}	)
						group by month	)	result,
					 (	SELECT LPAD(LEVEL, 2, '0') LV FROM DUAL CONNECT BY LEVEL &lt;= 12	) stand 
				where result.month(+) = stand.LV	)	i,
			 (	select stand.LV month, nvl(result.total, 0) spend_month_total  
				from (	select sum(cash+card) total, edate
						from(	select code_id, nvl(cash_expense,0) cash, nvl(card_expense,0) card, to_char(expense_date, 'MM') edate
								from expense
								where to_char(expense_date, 'YYYY')=#{year} and member_id=#{memberId}	)
						group by edate	)	result,
					 (	SELECT LPAD(LEVEL, 2, '0') LV FROM DUAL CONNECT BY LEVEL &lt;= 12	) stand 
				where result.edate(+) = stand.LV	)	s 
		where i.month=s.month 
		order by i.month
	</select>
</mapper>