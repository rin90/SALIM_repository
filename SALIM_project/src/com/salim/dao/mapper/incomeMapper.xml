<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace = "incomeMapper">
	
	<!-- 
		수입 insert
		수입 select - 해당 날짜에 저장되있는 것 모두 조회 - 순서는 입력순 - seq로 정렬 -> 페이징처리
		수입 update - 회원id에 해당하는 아이, 작성번호
		수입 delete - 선택된 것의 no를 조회해서 그것을 삭제
	 -->
	
	<!-- 수입 insert -->
	<insert id="insertIncome" parameterType="income">
		<selectKey keyProperty="incomeId" resultType="_int" order="BEFORE">
			select seq_inc.nextval from dual
		</selectKey>
		insert into income 
		values (#{incomeId}, #{memberId}, #{codeId}, #{incomeDate}, #{explanation}, #{incomeMoney})
	</insert>
	
	<!-- 수입 update -->
	<update id="updateIncome" parameterType="income">
		update income
		<set> 
			code_id=#{codeId},
			income_date=#{incomeDate},
			explanation=#{explanation},
			income_money=#{incomeMoney}
		</set>
		where income_id=#{incomeId}
		and member_id=#{memberId}
	</update>
	
	<!-- 수입 delete -->
	<delete id="deleteIncome" parameterType="map">
		delete from income 
		where income_id=#{incomeId}
		and member_id=#{memberId}
	</delete>
	
	
	<!-- resultMap -->
	<resultMap type="income" id="income-resultMap">
		<id column="income_id" property="incomeId"/>
		<result column="member_id" property="memberId"/>
		<result column="code_id" property="codeId"/>
		<result column="income_date" property="incomeDate"/>
		<result column="explanation" property="explanation"/>
		<result column="income_money" property="incomeMoney"/>
	</resultMap>
	
	<!-- 수입 select 날짜로 조회-->
	<select id="selectIncomeDate" parameterType="map" resultMap="income-resultMap">
		select income_id, member_id, code_id, income_date, explanation, income_money
		from income
		where member_id=#{memberId}
		and income_date=#{incomeDate}
		order by income_id asc
	</select>
	
	
	
	
	<!-- ==================================================================================== -->
	<!-- 	<<<<<	보고서용 Qery	>>>>>	-->	
	
	<!-- 1년동안 각각의 달의 수입 금액의 총합 (특정 년도, 특정 ID 기준 )-->
	<select id="selectImportEachMonth" parameterType="map" resultType="map">
		select ''''||stand.LV||'월'||'''' month, nvl(result.total, 0) income_month_total  
		from (	select month, sum(income_money) total 
				from (	select income_id, to_char(income_date, 'MM') month, income_money 
						from income 
						where to_char(income_date, 'YYYY')=#{year} and member_id=#{memberId}	)
				group by month	)	result, 
			 (	SELECT LPAD(LEVEL, 2, '0') LV FROM DUAL CONNECT BY LEVEL &lt;= 12	) stand  
		where result.month(+) = stand.LV 
		order by stand.LV 
	</select>
	
	<!--  1달동안 벌어들인 대분류별 지출금액 (특정 달, 특정ID 기준)  -->
	<select id="selectImportEachCategory" parameterType="map" resultType="map">
		select big.big_content category, nvl(result.total, 0) income_total
		from bigcategory big, 
			(	select big_code, sum(total) total 
				from (	select small.small_code, small.small_content, small.big_code, result.total 
						from smallcategory small, 
							(	select code_id, sum(income_money) total 
								from income 
								where to_char(income_date, 'YYYY-MM')=#{month} and member_id=#{memberId} 
								group by code_id	) 	result 
						where small.small_code = result.code_id		) 
				group by big_code) result 
		where big.big_code = result.big_code(+) and big.high_code = 1 
		order by big.big_code 
	</select>	

	
</mapper>