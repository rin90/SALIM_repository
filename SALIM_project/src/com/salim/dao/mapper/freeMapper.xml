<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="freeMapper">
	
	<resultMap type="freeboard" id="freeBoard-resultMap">
		<id column="no" property="no"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="file_root" property="fileName"/>
		<result column="file_name" property="fileName"/>
		<result column="click" property="click"/>
		<result column="good" property="good"/>
		<result column="register_time" property="registerTime"/>
		<result column="member_id" property="memberId"/>
	</resultMap>
	
	
	<resultMap type="freeboard" id="freeBoard-freeComment-join-resultMap" extends="freeBoard-resultMap">
		<collection property="freeComment" ofType="FreeComment">
			<id column="id" property="id"/>
			<result column="content" property="content"/>
			<result column="member_id" property="memberId"/>		
			<result column="no" property="no"/>
		 	<result column="comment_group" property="commentGroup"/>
			<result column="group_level" property="groupLevel"/>		
			<result column="register_time" property="registerTime"/>
		</collection>
	</resultMap>
	
	
	
	
	<!-- 자유게시판 글쓰기 (등록) -->
	<insert id="freeInsert" parameterType="freeboard">
		<selectKey keyProperty="no" resultType="_int" order="BEFORE">
			select seq_free.nextval from dual
		</selectKey>
		insert into free_board values(#{no},#{title},#{content},#{fileName},#{click},#{good},#{registerTime},#{memberId}) 		
	</insert>

	<!-- 자유게시판 글수정 -->
	<update id="freeUpdate" parameterType="freeboard">
		update free_board
		set title=#{title},
			content=#{content},
			file_root=#{fileName}
		where no=#{no}
	</update>
	
	<!-- 자유게시판 글 조회수 증가 등록 -->
	<update id="clickUpdate" parameterType="_int">
		update free_board
		set click=click +1
		where no=#{no}
	</update>
	
	<!-- 자유게시판 좋아요 증가 등록  -->
	<update id="goodUpdate" parameterType="map">
		update free_board
		set good=good+#{num}
		where no=#{no}
	</update>
	
	<!-- 자유게시판 글삭제 -->
	<delete id="freeDelete" parameterType="_int">
		delete from free_board
		where no=#{no}
	</delete>

	<!--(상세화면) 글 번호로 글 찾기(상세화면) - 조인연산 사용-->
	<select id="selectByNo" parameterType="_int" resultMap="freeBoard-freeComment-join-resultMap">
		select f.title,f.member_id memberId,f.register_time registerTime,f.click,f.good,f.content,f.file_root fileName,
		c.id,c.content,c.memberId,c.commentGroup,c.groupLevel,c.registerTime
		from free_board f,(
				select id,no,content,memberId,commentGroup,groupLevel,registerTime		
				from(
					select id,no,content,member_id memberId,comment_group commentGroup,group_level groupLevel,register_time registerTime
					from free_comments
					where no=#{no} <!--해당 글에 대한 댓글 모두 가져오기-->
					)
				order by fontGroup,id <!--가져온 글에 그룹번호로 정렬(그룹번호는 입력될때마다 증가한다. 그래서 즉 위에(먼저)입력한사람의 그룹 번호가 더 낮다.-->
				) c
		where f.no=#{no}
		and f.no=c.no(+) 
	</select>
	
	
	
	
	<!-- 글의 총댓글 개수 (상세화면)-->
	<select id="selectCommentTotal" parameterType="_int" resultType="_int">
	select count(id)
	from free_comments
	where font_no =#{value}
	</select>
	
	<!-- Page처리를 위한 글 토탈 -->
	<select id="selectTotal" resultType="_int">
		select  count(no)
		from free_board
	</select>
	
	<!-- page처리를 위한 현재 페이지 -->
	<select id="selectCurrentPage" parameterType="map" resultType="freeboard">
		select no, title,member_id memberId,register_time registerTime,click,good,file_root fileName 
		from(
				select ceil(rownum/#{current}) page,no, title,member_id,register_time,click,good,file_root 
				from (
					select no,title,member_id,register_time,click,good,file_root
					from free_board
					order by no desc
				)
		)
		where page=#{page}
	</select>
	
	
	
	<!-- Page처리를 위한 글 토탈-작성자로 검색  -->
	<select id="selectMemberIdTotal"  parameterType="string" resultType="_int">
		select  count(no)
		from free_board
		where member_id=#{value}
	</select>
	
	<!-- 조회- 작성자로 검색  -->
	<select id="selectByMemberid" parameterType="map" resultType="freeboard">
		select no,title,member_id memberId,register_time registerTime,click,good,file_root fileName
		from(
			select ceil(rownum/#{current}) page,no,title,member_id,register_time,click,good,file_root
			from (
					select no,title,member_id,register_time,click,good,file_root
					from free_board
					order by no desc
			)
			where member_id=#{memberId}
		)
		where page=#{page}
	</select>
	



	<!-- Page처리를 위한 글 토탈 - 제목으로 검색 -->
	<select id="selectTitleTotal"   parameterType="string"  resultType="_int">
		select  count(no)
		from free_board
		where title like '%'||#{value}||'%'
	</select>
	
	<!-- 조회 - 제목으로 검색 -->
	<select id="selectByTitle" parameterType="map" resultType="freeboard">
		select no,title,member_id memberId,register_time registerTime,click,good,file_root fileName
		from(
			select ceil(rownum/#{current}) page,no,title,member_id,register_time,click,good,file_root 
			from (
					select no,title,member_id,register_time,click,good,file_root
					from free_board
					order by no desc
			)
			where title like '%'||#{title}||'%'
		)
		where page=#{page}
	</select>
		
	
	
	
	
	
	
	
	
	
	
	


</mapper>
