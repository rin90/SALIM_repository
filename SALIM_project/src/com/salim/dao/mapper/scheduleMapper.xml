<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="scheduleMapper">
	
	<sql id="schedule-select">
		select no, title, detail, start_date, end_date, member_id
		from schedule 
	</sql>

	<resultMap type="com.salim.vo.Schedule" id="schedule-resultMap">
		<id column="no" property="no"/>
		<result column="title" property="title"/>
		<result column="detail" property="detail"/>
		<result column="start_date" property="start"/>
		<result column="end_date" property="end"/>
		<result column="member_id" property="memberId"/>
	</resultMap>
	<!-- 
	<insert id="insertSchedule" parameterType="schedule">
		insert into schedule values (#{no}, #{title}, #{detail}, #{startDate}, #{endDate}, #{memberId})
	</insert> 
	 -->
	<insert id="insertSchedule" parameterType="schedule">
		<selectKey keyProperty="no" resultType="_int" order="BEFORE">
			select seq_sch.nextval from dual
		</selectKey>
		insert into schedule values (#{no}, #{title}, #{detail}, #{start}, #{end}, #{memberId})
	</insert> 
	
	<update id="updateSchedule" parameterType="schedule">
		update schedule 
		set title=#{title}, detail=#{detail}, start_date=#{start}, end_date=#{end} 
		where no=#{no}
	</update>
<!-- 	
	<update id="updateSchedule" parameterType="schedule">
		update schedule 
		set title=#{title}, detail=#{detail}, start_date=#{startDate}, end_date=#{endDate} 
		where no=#{no}
	</update> -->
<!-- 	
	Service에서 update를 여러번 시도하는 것으로 우선 구현 -> 이후 해당 xml파일 내부에서 반복하는 형식을 만들 수 있게 찾아보자.
	<update id="updateScheduleList" parameterType="list">
	
	</update>
-->
	<delete id="deleteSchedule" parameterType="_int">
		delete from schedule where no=#{value}
	</delete>
	
	
	<select id="selectScheduleByMonth" parameterType="map" resultMap="schedule-resultMap">
		<include refid="schedule-select"/>
		where member_id=#{memberId} and to_char(start_date, 'YYYY-MM')=#{month} or (to_char(start_date,'YYYY-MM')&lt;#{month} and to_char(end_date,'YYYY-MM')=#{month})
	</select>
	
	<select id="selectScheduleByDay" parameterType="map" resultMap="schedule-resultMap">
		<include refid="schedule-select"/>
		where member_id=#{memberId} and (to_char(start_date,'YYYY-MM-DD')&lt;=#{day} and to_char(end_date,'YYYY-MM-DD')>=#{day})
	</select>
	
	
</mapper>